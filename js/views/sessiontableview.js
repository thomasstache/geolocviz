define(

	["jquery", "underscore", "backbone",
	 "collections/sortablecollection",
	 "models/session",
	 "hbs!templates/sessiontable", "hbs!templates/sessiontablerows"],

	function($, _, Backbone,
			 SortableCollection, Session,
			 tableDialogTemplate, bodyTemplate) {

		var SessionTableView = Backbone.View.extend({

			// tag,ID for the autogenerated node the view will be enclosed in
			tagName: "div",
			id: "sessionTableDialog",

			$tableBody: null,

			/** @type {SortableCollection} */
			collection: null,

			events: {
				"click #btnClose": "close",
			},

			initialize: function(options) {

				var sessions = options.sessions || null;

				if (sessions) {

					// create a sortable collection with the session "info"
					var sessionInfo = sessions.map(function(session) {
						return session.getInfo();
					});

					this.collection = new SortableCollection(sessionInfo);
					// sort for testing fun
					this.collection.setSortAttribute("distance")
								   .setSortDirection(SortableCollection.SORT_DESCENDING)
								   .sort();

					this.render();

					// 	this.listenTo(this.collection, "sort", "this.updateTable");
				}
			},

			// create the dialog and insert into page DOM
			render: function() {

				var context = {
					title: "Sessions",
				};

				this.$el.html(tableDialogTemplate(context));
				$(document.body).append(this.$el);

				this.$tableBody = this.$("#sessionTableBody");

				this.updateTable();

				return this;
			},

			// Render the table body with the current sort configuration.
			updateTable: function() {

				if (this.$tableBody !== null) {

					// convert Models to JS objects
					var data = this.collection.map(function(info) {
						return info.toJSON();
					});

					var context = {
						sessions: data,
					};

					this.$tableBody.html(bodyTemplate(context));
				}

				return this;
			},

			close: function() {

				this.trigger("dialog:cancel");
				this.remove();
			},
		});

		return SessionTableView;
	}
);