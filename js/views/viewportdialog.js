define(
	["jquery", "backbone", "mousetrap",
	 "types/viewport",
	 "hbs!templates/viewportdialog"],

	function($, Backbone, Mousetrap, Viewport, dialogTemplate) {

		var ViewportDialog = Backbone.View.extend({

			constructor: function ViewportDialog() {
				Backbone.View.prototype.constructor.apply(this, arguments);
			},

			// tag,ID for the autogenerated node the view will be enclosed in
			tagName: "div",
			id: "viewportDialog",

			/** @type {Viewport} the viewport model */
			viewport: null,

			events: {
				"click #btnApply": "applyClicked",
				"click #btnCancel": "close",
			},

			keyboardHandler: null,

			initialize: function(options) {

				this.viewport = options.viewport || new Viewport();

				this.render();
				this.updateControls();

				this.addKeyListeners();
			},

			// create the dialog nodes and insert into page DOM
			render: function() {

				this.$el.html(dialogTemplate());
				$(document.body).append(this.$el);

				return this;
			},

			// set the controls to the current model values
			updateControls: function() {

				if (this.viewport.isValid()) {
					this.$("#centerInput").val(this.viewport.center.toUrlValue());
					this.$("#zoomInput").val(this.viewport.zoom);
					this.$("#boundsInput")
						.val(this.viewport.serialize())
						.focus();
				}
			},

			addKeyListeners: function() {
				this.keyboardHandler = new Mousetrap();
				this.keyboardHandler.bind(KEY_ESC, this.close.bind(this));
				this.keyboardHandler.bind(KEY_RET, this.applyClicked.bind(this));
			},

			removeKeyListeners: function() {
				this.keyboardHandler.reset();
				this.keyboardHandler = null;
			},

			applyClicked: function() {

				var input = this.$("#boundsInput").val();
				this.viewport.parse(input);

				this.trigger("viewport:set", this.viewport);
				this.remove();
			},

			close: function() {

				this.trigger("dialog:cancel");
				this.remove();
			},

			remove: function() {

				this.removeKeyListeners();
				Backbone.View.prototype.remove.apply(this, arguments);
			},
		});

		var KEY_ESC = "esc";
		var KEY_RET = "enter";

		return ViewportDialog;
	}
);
