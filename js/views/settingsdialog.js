define(
	["jquery", "backbone",
	 "models/settings",
	 "hbs!templates/settingsdialog"],

	function($, Backbone, Settings, dialogTemplate) {

		var SettingsDialog = Backbone.View.extend({

			// tag,ID for the autogenerated node the view will be enclosed in
			tagName: "div",
			id: "settingsdialog",

			/** @type {Settings} the settings model */
			model: null,

			$probMobilityInput: null,
			$probIndoorInput: null,
			$checkUseDotIcons: null,

			events: {
				"click #btnApply": "applyClicked",
				"click #btnCancel": "close",
				"click #btnReset": "resetSettings",
			},

			initialize: function() {

				this.listenTo(this.model, "reset", this.updateControls);

				this.render();
				this.updateControls();
			},

			// create the dialog nodes and insert into page DOM
			render: function() {

				this.$el.html(dialogTemplate());
				$(document.body).append(this.$el);

				this.$probMobilityInput = this.$("#probMobilityInput");
				this.$probIndoorInput = this.$("#probIndoorInput");
				this.$checkUseDotIcons = this.$("#checkUseDotIcons");

				return this;
			},

			// set the controls to the current model values
			updateControls: function() {

				this.$probMobilityInput.val(this.model.get("mobilityThreshold"));
				this.$probIndoorInput.val(this.model.get("indoorThreshold"));
				this.$checkUseDotIcons.prop("checked", this.model.get("useDotAccuracyMarkers"));
			},

			/**
			 * Handler for the "Reset" button in the dialog.
			 */
			resetSettings: function() {

				if (confirm("This will revert all settings to their defaults..."))
					this.model.reset();
			},

			applyClicked: function() {

				var probMobility = this.$probMobilityInput ? this.$probMobilityInput.val() : 0.5,
					probIndoor = this.$probIndoorInput ? this.$probIndoorInput.val() : 0.5,
					useDotIcons = this.$checkUseDotIcons.prop("checked");

				this.model.set({
					mobilityThreshold: parseFloat(probMobility),
					indoorThreshold: parseFloat(probIndoor),
					useDotAccuracyMarkers: useDotIcons,
				});

				this.trigger("dialog:apply");
				this.remove();
			},

			close: function() {

				this.trigger("dialog:cancel");
				this.remove();
			},
		});

		return SettingsDialog;
	}
);
